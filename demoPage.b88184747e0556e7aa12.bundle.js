(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{l:()=>r,j:()=>i});const i={required:()=>"required",string:()=>"string",email:()=>"email",minStrLen:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to minStrLen()`),""):`minStrLen:${t}`,maxStrLen:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to maxStrLen()`),""):`maxStrLen:${t}`,in:t=>Array.isArray(t)?"in:"+t.join(","):(console.error(`${t} is not an array.`),""),between:t=>Array.isArray(t)&&2==t.length?"between:"+t.join(","):(console.error(`Error creating a 'between' rule with values ${t}`),""),gt:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to gt()`),""):`gt:${t}`,gte:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to gte()`),""):`gte:${t}`,lt:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to lt()`),""):`lt:${t}`,lte:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to lte()`),""):`lte:${t}`,date:t=>`date:${t}`},s={required:t=>`${t} field is required`,string:t=>`${t} must be string`,email:t=>`${t} must be an email string`,in:t=>`${t} value is invalid`,between:(t,e)=>`${t} value must be between ${e[0]} and ${e[1]}`,gt:(t,e)=>`${t} value must be greater then ${e[0]}`,gte:(t,e)=>`${t} value must be greater then or equal to ${e[0]}`,lt:(t,e)=>`${t} value must be greater then ${e[0]}`,lte:(t,e)=>`${t} value must be less then or equal to ${e[0]}`,date:t=>`${t} value is not a valid date string`,minStrLen:(t,e)=>`${t} must have at least ${e[0]} characters`,maxStrLen:(t,e)=>`${t} must not have more than ${e[0]} characters`},a={required:t=>null!=t&&""!==t,string:t=>"string"==typeof t,minStrLen:(t,e)=>"string"==typeof t&&t.length>=e[0],maxStrLen:(t,e)=>"string"==typeof t&&t.length<=e[0],email:t=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(t).toLowerCase()),in:(t,e)=>e.includes(t),between:(t,e)=>{const i=Number(t);return i>=e[0]&&i<=e[1]},gt:(t,e)=>Number(t)>e[0],gte:(t,e)=>Number(t)>=e[0],lt:(t,e)=>Number(t)<e[0],lte:(t,e)=>Number(t)<=e[0],date:t=>!isNaN(Date.parse(t))};class l{constructor(t){this.field=t,this.form=void 0,this.options=void 0,this.validationRules=void 0,this.shouldReset=!1,this.isLive=!1,this.isValid=!0,this.setOptions=this.setOptions.bind(this),this.setValidationRules=this.setValidationRules.bind(this),this.setForm=this.setForm.bind(this),this.getValidationRules=this.getValidationRules.bind(this),this.getFieldElement=this.getFieldElement.bind(this),this.reset=this.reset.bind(this),this.validate=this.validate.bind(this),this.getReadableName=this.getReadableName.bind(this),this.attachValidationMessageLabel=this.attachValidationMessageLabel.bind(this),this.onInput=this.onInput.bind(this),this.bindInputListener=this.bindInputListener.bind(this),this.shouldResetOnInput=this.shouldResetOnInput.bind(this),this.live=this.live.bind(this),this.destroy=this.destroy.bind(this)}setOptions(t){this.options=t,t.live&&this.live(),t.silent||this.shouldResetOnInput()}setValidationRules(t){this.validationRules=t}setForm(t){this.form=t}getValidationRules(){return this.validationRules}getFieldElement(){return this.field}getFieldName(){return this.getFieldElement().getAttribute("name")}getReadableName(){let t=this.getFieldName().split("_").join(" ");return t.charAt(0).toUpperCase()+t.slice(1)}reset(){const t=this.field.parentNode.querySelector("[data-is-validation-error]");t&&t.parentNode.removeChild(t),this.field.classList.remove(this.options.invalidClass),this.field.classList.remove(this.options.validClass)}validate(){this.isValid=!0;let t=this.getValidationRules();if(t){t=t.filter((t=>"string"==typeof t));for(const e of t){let t,i=e;if(e.includes(":")){const s=e.split(":");i=s[0],t=s[1].split(",")}const s=a[i];if(!s)throw new Error(`Validator '${i}' does not exist!`);if(this.isValid=s(this.getFieldElement().value,t),!this.isValid){this.options.silent||this.attachValidationMessageLabel(i,t);break}}}if(!this.options.silent){const t=this.isValid?this.options.validClass:this.options.invalidClass;this.getFieldElement().classList.add(t)}return this.isValid}attachValidationMessageLabel(t,e){if(!this.options.silent){const i=this.getFieldName(),a=this.options.validationMessages||{};let l=this.getReadableName();const n=(a[i]?a[i][t]:void 0)||s[t](l,e),r=document.createElement("p");r.setAttribute("data-is-validation-error","1"),r.style.color=this.options.validationMessageColor,r.style.marginTop="0px",r.innerText=n,this.getFieldElement().parentNode.appendChild(r)}}onInput(){this.shouldReset&&this.reset(),this.isLive&&(this.validate(),this.form.revalidate())}bindInputListener(){this.field.addEventListener("input",this.onInput)}shouldResetOnInput(){return this.shouldReset=!0,this.bindInputListener(),this}live(){return this.isLive=!0,this.bindInputListener(),this}destroy(){this.field.removeEventListener("input",this.onInput)}}const n={validationMessages:{},silent:!1,invalidClass:"invalid",validClass:"valid",validationMessageColor:"red",live:!0};class r{constructor(t){this.form=t,this.validationRules={},this.options={},this.fields=[],this.isValid=!0,this.onValidCallback=()=>{},this.onInvalidCallback=()=>{},this.getHtmlElement=this.getHtmlElement.bind(this),this.getHtmlFields=this.getHtmlFields.bind(this),this.initialize=this.initialize.bind(this),this.validate=this.validate.bind(this),this.revalidate=this.revalidate.bind(this),this.handleCallbacksAfterValidation=this.handleCallbacksAfterValidation.bind(this),this.onValid=this.onValid.bind(this),this.onInvalid=this.onInvalid.bind(this),this.destroy=this.destroy.bind(this)}getHtmlElement(){return this.form}getHtmlFields(){const t=Array.from(this.form.querySelectorAll('[name]:not([type="checkbox"]):not([type="radio"]):not([data-disable-validation])')),e=e=>{this.form.querySelectorAll(`[type=${e}]:checked:not([data-disable-validation])`).forEach((e=>{t.push(e)}))};return e("radio"),e("checkbox"),t}initialize(t,e={}){this.validationRules=t,this.options={...n,...e};const i=this.getHtmlFields();for(let t=0;t<i.length;t++){const e=new l(i[t]);e.setForm(this),e.setValidationRules(this.validationRules[e.getFieldName()]),e.setOptions(this.options),this.fields.push(e)}return this}validate(){const t=[];return this.isValid=!0,this.fields.forEach((e=>{e.reset(),e.validate(),e.isValid?e.getValidationRules()&&t.push(e.getFieldElement()):this.isValid=!1})),this.handleCallbacksAfterValidation(),{validFields:t,isValid:this.isValid}}revalidate(){this.isValid=!0;for(let t=0;t<this.fields.length;t++)if(!this.fields[t].isValid){this.isValid=!1;break}this.handleCallbacksAfterValidation()}handleCallbacksAfterValidation(){this.isValid?this.onValidCallback(this):this.onInvalidCallback(this)}onValid(t){return this.onValidCallback=t,this}onInvalid(t){return this.onInvalidCallback=t,this}destroy(){this.fields.forEach((t=>{t.destroy()}))}}var o=e.l,d=e.j;let h;const u=t=>{h&&clearTimeout(h);const e=t.getHtmlElement().querySelector("button");e.innerText=t.isValid?"Form is valid! ðŸŽ‰":"Error ðŸ˜”",h=setTimeout((()=>{e.innerText="Submit"}),5e3)},c=document.querySelector("#search");var m;c.addEventListener("input",(()=>{const t=c.value,e=document.querySelectorAll("form");console.clear(),e.forEach((e=>{const i=e.parentNode,s=i.parentNode,a=i.querySelectorAll("[data-searchable]");for(let e=0;e<a.length;e++){const i=a[e].innerText.toLowerCase().trim(),l=t.toLowerCase().trim();if(i.includes(l)||!t){s.style.display="block";break}s.style.display="none"}}))})),(m=d,[{name:"Required rule",formId:"test-required-validation",validationRules:{first_name:[m.required()]},callback:u},{name:"String rule",formId:"test-string-validation",validationRules:{first_name:[m.string()]},callback:u},{name:"Min. string len. rule",formId:"test-min-str-len-validation",validationRules:{first_name:[m.minStrLen(5)]},callback:u},{name:"Max. string len. rule",formId:"test-max-str-len-validation",validationRules:{first_name:[m.maxStrLen(5)]},callback:u},{name:"Email rule",formId:"test-email-validation",validationRules:{email:[m.email()]},callback:u},{name:"In rule",formId:"test-in-validation",validationRules:{favourite_color:[m.in(["red","green","blue"])]},callback:u},{name:"Between rule",formId:"test-between-validation",validationRules:{age:[m.between([18,24])]},callback:u},{name:"GT rule",formId:"test-gt-validation",validationRules:{number:[m.gt(50)]},callback:u},{name:"GTE rule",formId:"test-gte-validation",validationRules:{number:[m.gte(50)]},callback:u},{name:"LT rule",formId:"test-lt-validation",validationRules:{number:[m.lt(50)]},callback:u},{name:"LTE rule",formId:"test-lte-validation",validationRules:{number:[m.lte([50])]},callback:u},{name:"Date rule",formId:"test-date-validation",validationRules:{birthday:[m.date()],birthday_date:[m.date()]},callback:u}]).forEach((t=>{const e=document.querySelector(`#${t.formId}`),i=e.querySelector("input[name=live]"),s=()=>{const s={live:i.checked};let a=new o(e).initialize(t.validationRules,s);return s.live&&(a=a.onValid(t.callback).onInvalid(t.callback)),a};let a=s();i.addEventListener("change",(()=>{a.destroy(),a=s()})),e.querySelector("button").onclick=function(){a.validate(),t.callback(a)}}))})();