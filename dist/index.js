var e={d:(t,r)=>{for(var a in r)e.o(r,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:r[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{j:()=>r,G:()=>o});const r={required:()=>"required",string:()=>"string",email:()=>"email",minStrLen:e=>isNaN(e)?(console.error(`Passing NaN value of '${e}' to minStrLen()`),""):`minStrLen:${e}`,maxStrLen:e=>isNaN(e)?(console.error(`Passing NaN value of '${e}' to maxStrLen()`),""):`maxStrLen:${e}`,in:e=>Array.isArray(e)?"in:"+e.join(","):(console.error(`${e} is not an array.`),""),between:e=>Array.isArray(e)&&2==e.length?"between:"+e.join(","):(console.error(`Error creating a 'between' rule with values ${e}`),""),gt:e=>isNaN(e)?(console.error(`Passing NaN value of '${e}' to gt()`),""):`gt:${e}`,gte:e=>isNaN(e)?(console.error(`Passing NaN value of '${e}' to gte()`),""):`gte:${e}`,lt:e=>isNaN(e)?(console.error(`Passing NaN value of '${e}' to lt()`),""):`lt:${e}`,lte:e=>isNaN(e)?(console.error(`Passing NaN value of '${e}' to lte()`),""):`lte:${e}`,date:e=>`date:${e}`},a={required:e=>`${e} field is required`,string:e=>`${e} must be string`,email:e=>`${e} must be an email string`,in:e=>`${e} value is invalid`,between:(e,t)=>`${e} value must be between ${t[0]} and ${t[1]}`,gt:(e,t)=>`${e} value must be greater then ${t[0]}`,gte:(e,t)=>`${e} value must be greater then or equal to ${t[0]}`,lt:(e,t)=>`${e} value must be greater then ${t[0]}`,lte:(e,t)=>`${e} value must be less then or equal to ${t[0]}`,date:e=>`${e} value is not a valid date string`,minStrLen:(e,t)=>`${e} must have at least ${t[0]} characters`,maxStrLen:(e,t)=>`${e} must not have more than ${t[0]} characters`},n={required:e=>null!=e&&""!==e,string:e=>"string"==typeof e,minStrLen:(e,t)=>"string"==typeof e&&e.length>=t[0],maxStrLen:(e,t)=>"string"==typeof e&&e.length<=t[0],email:e=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase()),in:(e,t)=>t.includes(e),between:(e,t)=>{const r=Number(e);return r>=t[0]&&r<=t[1]},gt:(e,t)=>Number(e)>t[0],gte:(e,t)=>Number(e)>=t[0],lt:(e,t)=>Number(e)<t[0],lte:(e,t)=>Number(e)<=t[0],date:e=>!isNaN(Date.parse(e))},s=(e,t,r={})=>{const s=e.getAttribute("name"),i=r.validationMessages||{};if(!r.silent){const t=function(e){const t=e.parentNode.querySelector("[data-is-validation-error]");t&&t.parentNode.removeChild(t)};t(e),e.classList.remove(r.invalidClass),e.addEventListener("input",(function(){t(e),e.classList.remove(r.invalidClass)}))}let o=!0,l=t[s];if(l){l=l.filter((e=>"string"==typeof e));for(const t of l){let l,u=t;if(t.includes(":")){const e=t.split(":");u=e[0],l=e[1].split(",")}const d=n[u];if(!d)throw new Error(`Validator '${u}' does not exist!`);if(o=d(e.value,l),!o){if(!r.silent){let t=s.split("_").join(" ");t=t.charAt(0).toUpperCase()+t.slice(1);const n=(i[s]?i[s][u]:void 0)||a[u](t,l),o=document.createElement("p");o.setAttribute("data-is-validation-error","1"),o.style.color=r.validationMessageColor,o.style.marginTop="0px",o.innerText=n,e.parentNode.appendChild(o)}break}}}return o},i={validationMessages:{},silent:!1,invalidClass:"invalid",validationMessageColor:"red"},o=(e,t,r={})=>{r={...i,...r};const a=[],n=(e=>{const t=Array.from(e.querySelectorAll('[name]:not([type="checkbox"]):not([type="radio"])')),r=r=>{e.querySelectorAll(`[type=${r}]:checked`).forEach((e=>{t.push(e)}))};return r("radio"),r("checkbox"),t})(e);let o=!0;for(let e=0;e<n.length;e++){const i=n[e];s(i,t,r)?Object.keys(t).includes(i.getAttribute("name"))&&a.push(i):(o=!1,r.silent||i.classList.add(r.invalidClass))}return{validFormFields:a,formIsValid:o}};var l=t.j,u=t.G;export{l as rules,u as validateForm};