var t={d:(i,e)=>{for(var s in e)t.o(e,s)&&!t.o(i,s)&&Object.defineProperty(i,s,{enumerable:!0,get:e[s]})},o:(t,i)=>Object.prototype.hasOwnProperty.call(t,i)},i={};t.d(i,{l:()=>o,j:()=>e});const e={required:()=>"required",string:()=>"string",email:()=>"email",minStrLen:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to minStrLen()`),""):`minStrLen:${t}`,maxStrLen:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to maxStrLen()`),""):`maxStrLen:${t}`,in:t=>Array.isArray(t)?"in:"+t.join(","):(console.error(`${t} is not an array.`),""),between:t=>Array.isArray(t)&&2==t.length?"between:"+t.join(","):(console.error(`Error creating a 'between' rule with values ${t}`),""),gt:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to gt()`),""):`gt:${t}`,gte:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to gte()`),""):`gte:${t}`,lt:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to lt()`),""):`lt:${t}`,lte:t=>isNaN(t)?(console.error(`Passing NaN value of '${t}' to lte()`),""):`lte:${t}`,date:t=>`date:${t}`},s={required:t=>`${t} field is required`,string:t=>`${t} must be string`,email:t=>`${t} must be an email string`,in:t=>`${t} value is invalid`,between:(t,i)=>`${t} value must be between ${i[0]} and ${i[1]}`,gt:(t,i)=>`${t} value must be greater then ${i[0]}`,gte:(t,i)=>`${t} value must be greater then or equal to ${i[0]}`,lt:(t,i)=>`${t} value must be greater then ${i[0]}`,lte:(t,i)=>`${t} value must be less then or equal to ${i[0]}`,date:t=>`${t} value is not a valid date string`,minStrLen:(t,i)=>`${t} must have at least ${i[0]} characters`,maxStrLen:(t,i)=>`${t} must not have more than ${i[0]} characters`},a={required:t=>null!=t&&""!==t,string:t=>"string"==typeof t,minStrLen:(t,i)=>"string"==typeof t&&t.length>=i[0],maxStrLen:(t,i)=>"string"==typeof t&&t.length<=i[0],email:t=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(t).toLowerCase()),in:(t,i)=>i.includes(t),between:(t,i)=>{const e=Number(t);return e>=i[0]&&e<=i[1]},gt:(t,i)=>Number(t)>i[0],gte:(t,i)=>Number(t)>=i[0],lt:(t,i)=>Number(t)<i[0],lte:(t,i)=>Number(t)<=i[0],date:t=>!isNaN(Date.parse(t))};class l{constructor(t){this.field=t,this.form=void 0,this.options=void 0,this.validationRules=void 0,this.shouldReset=!1,this.isLive=!1,this.isValid=!0,this.setOptions=this.setOptions.bind(this),this.setValidationRules=this.setValidationRules.bind(this),this.setForm=this.setForm.bind(this),this.getValidationRules=this.getValidationRules.bind(this),this.getFieldElement=this.getFieldElement.bind(this),this.reset=this.reset.bind(this),this.validate=this.validate.bind(this),this.getReadableName=this.getReadableName.bind(this),this.attachValidationMessageLabel=this.attachValidationMessageLabel.bind(this),this.onInput=this.onInput.bind(this),this.bindInputListener=this.bindInputListener.bind(this),this.shouldResetOnInput=this.shouldResetOnInput.bind(this),this.live=this.live.bind(this),this.destroy=this.destroy.bind(this)}setOptions(t){this.options=t,t.live&&this.live(),t.silent||this.shouldResetOnInput()}setValidationRules(t){this.validationRules=t}setForm(t){this.form=t}getValidationRules(){return this.validationRules}getFieldElement(){return this.field}getFieldName(){return this.getFieldElement().getAttribute("name")}getReadableName(){let t=this.getFieldName().split("_").join(" ");return t.charAt(0).toUpperCase()+t.slice(1)}reset(){const t=this.field.parentNode.querySelector("[data-is-validation-error]");t&&t.parentNode.removeChild(t),this.field.classList.remove(this.options.invalidClass),this.field.classList.remove(this.options.validClass)}validate(){this.isValid=!0;let t=this.getValidationRules();if(t){t=t.filter((t=>"string"==typeof t));for(const i of t){let t,e=i;if(i.includes(":")){const s=i.split(":");e=s[0],t=s[1].split(",")}const s=a[e];if(!s)throw new Error(`Validator '${e}' does not exist!`);if(this.isValid=s(this.getFieldElement().value,t),!this.isValid){this.options.silent||this.attachValidationMessageLabel(e,t);break}}}if(!this.options.silent){const t=this.isValid?this.options.validClass:this.options.invalidClass;this.getFieldElement().classList.add(t)}return this.isValid}attachValidationMessageLabel(t,i){if(!this.options.silent){const e=this.getFieldName(),a=this.options.validationMessages||{};let l=this.getReadableName();const n=(a[e]?a[e][t]:void 0)||s[t](l,i),o=document.createElement("p");o.setAttribute("data-is-validation-error","1"),o.style.color=this.options.validationMessageColor,o.style.marginTop="0px",o.innerText=n,this.getFieldElement().parentNode.appendChild(o)}}onInput(){this.shouldReset&&this.reset(),this.isLive&&(this.validate(),this.form.revalidate())}bindInputListener(){this.field.addEventListener("input",this.onInput)}shouldResetOnInput(){return this.shouldReset=!0,this.bindInputListener(),this}live(){return this.isLive=!0,this.bindInputListener(),this}destroy(){this.field.removeEventListener("input",this.onInput)}}const n={validationMessages:{},silent:!1,invalidClass:"invalid",validClass:"valid",validationMessageColor:"red",live:!0};class o{constructor(t){this.form=t,this.validationRules={},this.options={},this.fields=[],this.isValid=!0,this.onValidCallback=()=>{},this.onInvalidCallback=()=>{},this.getHtmlElement=this.getHtmlElement.bind(this),this.getHtmlFields=this.getHtmlFields.bind(this),this.initialize=this.initialize.bind(this),this.validate=this.validate.bind(this),this.revalidate=this.revalidate.bind(this),this.handleCallbacksAfterValidation=this.handleCallbacksAfterValidation.bind(this),this.onValid=this.onValid.bind(this),this.onInvalid=this.onInvalid.bind(this),this.destroy=this.destroy.bind(this)}getHtmlElement(){return this.form}getHtmlFields(){const t=Array.from(this.form.querySelectorAll('[name]:not([type="checkbox"]):not([type="radio"]):not([data-disable-validation])')),i=i=>{this.form.querySelectorAll(`[type=${i}]:checked:not([data-disable-validation])`).forEach((i=>{t.push(i)}))};return i("radio"),i("checkbox"),t}initialize(t,i={}){this.validationRules=t,this.options={...n,...i},this.fields=[];const e=this.getHtmlFields();for(let t=0;t<e.length;t++){const i=new l(e[t]);i.setForm(this),i.setValidationRules(this.validationRules[i.getFieldName()]),i.setOptions(this.options),this.fields.push(i)}return this}validate(){const t=[];return this.isValid=!0,this.fields.forEach((i=>{i.reset(),i.validate(),i.isValid?i.getValidationRules()&&t.push(i.getFieldElement()):this.isValid=!1})),this.handleCallbacksAfterValidation(),{validFields:t,isValid:this.isValid}}revalidate(){this.isValid=!0;for(let t=0;t<this.fields.length;t++)if(!this.fields[t].isValid){this.isValid=!1;break}this.handleCallbacksAfterValidation()}handleCallbacksAfterValidation(){this.isValid?this.onValidCallback(this):this.onInvalidCallback(this)}onValid(t){return this.onValidCallback=t,this}onInvalid(t){return this.onInvalidCallback=t,this}destroy(){this.fields.forEach((t=>{t.destroy()}))}}var r=i.l,d=i.j;export{r as Form,d as rules};